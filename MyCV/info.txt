package main

import (
    "context"
    "log"
    "time"

    "go.mongodb.org/mongo-driver/mongo"
    "go.mongodb.org/mongo-driver/mongo/options"
)

func connectToMongoDB(uri string) *mongo.Client {
    // Set client options
    clientOptions := options.Client().ApplyURI(uri)

    // Connect to MongoDB
    client, err := mongo.Connect(context.TODO(), clientOptions)
    if err != nil {
        log.Fatalf("Failed to connect to database: %v", err)
    }

    // Check the connection
    err = client.Ping(context.TODO(), nil)
    if err != nil {
        log.Fatalf("Failed to ping database: %v", err)
    }

    log.Println("Connected to MongoDB!")
    return client
}


func main() {
    uri1 := "mongodb://<username>:<password>@<host1>/<db1>?authSource=admin&authMechanism=SCRAM-SHA-256"
    uri2 := "mongodb://<username>:<password>@<host2>/<db2>?authSource=admin&authMechanism=SCRAM-SHA-256"

    // Connect to the first MongoDB database
    client1 := connectToMongoDB(uri1)
    defer func() {
        if err := client1.Disconnect(context.Background()); err != nil {
            panic(err)
        }
    }()

    // Connect to the second MongoDB database
    client2 := connectToMongoDB(uri2)
    defer func() {
        if err := client2.Disconnect(context.Background()); err != nil {
            panic(err)
        }
    }()

    // Now, client1 and client2 can be used to interact with their respective databases
}
